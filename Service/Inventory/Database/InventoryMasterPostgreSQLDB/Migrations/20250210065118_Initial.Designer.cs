// <auto-generated />
using System;
using InventoryMasterPostgreSQLDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InventoryMasterPostgreSQLDB.Migrations
{
    [DbContext(typeof(InventoryMasterDbContext))]
    [Migration("20250210065118_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InventoryMasterPostgreSQLDB.Models.TmArea", b =>
                {
                    b.Property<int>("Areaid")
                        .HasColumnType("integer")
                        .HasColumnName("areaid");

                    b.Property<string>("Areacode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("areacode");

                    b.Property<string>("Areaname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("areaname");

                    b.Property<int>("Areatype")
                        .HasColumnType("integer")
                        .HasColumnName("areatype");

                    b.Property<string>("Createby")
                        .HasColumnType("text")
                        .HasColumnName("createby");

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdate")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("Inactivedate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("inactivedate")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("Isactive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<int>("Plantid")
                        .HasColumnType("integer")
                        .HasColumnName("plantid");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("remark");

                    b.Property<string>("Updateby")
                        .HasColumnType("text")
                        .HasColumnName("updateby");

                    b.Property<DateTime?>("Updatedate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedate");

                    b.Property<int>("Warehouseid")
                        .HasColumnType("integer")
                        .HasColumnName("warehouseid");

                    b.HasKey("Areaid")
                        .HasName("idx_183395_pk_tm_area_1");

                    b.HasIndex(new[] { "Areacode" }, "areacode")
                        .IsUnique();

                    b.ToTable("tm_area", (string)null);
                });

            modelBuilder.Entity("InventoryMasterPostgreSQLDB.Models.TmItem", b =>
                {
                    b.Property<int>("Itemid")
                        .HasColumnType("integer")
                        .HasColumnName("itemid");

                    b.Property<string>("Createby")
                        .HasColumnType("text")
                        .HasColumnName("createby");

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdate")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("Inactivedate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("inactivedate")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("Isactive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<string>("Itemcode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("itemcode");

                    b.Property<int>("Itemgroup")
                        .HasColumnType("integer")
                        .HasColumnName("itemgroup");

                    b.Property<string>("Itemnameeng")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("itemnameeng");

                    b.Property<string>("Itemnamethai")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("itemnamethai");

                    b.Property<int>("Itemsubtype")
                        .HasColumnType("integer")
                        .HasColumnName("itemsubtype");

                    b.Property<int>("Itemtype")
                        .HasColumnType("integer")
                        .HasColumnName("itemtype");

                    b.Property<string>("Partname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("partname");

                    b.Property<string>("Partno")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("partno");

                    b.Property<decimal>("Stdsnp")
                        .HasColumnType("numeric")
                        .HasColumnName("stdsnp");

                    b.Property<string>("Stdunit")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("stdunit");

                    b.Property<string>("Updateby")
                        .HasColumnType("text")
                        .HasColumnName("updateby");

                    b.Property<DateTime?>("Updatedate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedate");

                    b.HasKey("Itemid")
                        .HasName("idx_183395_pk_tm_item_1");

                    b.HasIndex(new[] { "Itemcode" }, "itemcode")
                        .IsUnique();

                    b.ToTable("tm_item", (string)null);
                });

            modelBuilder.Entity("InventoryMasterPostgreSQLDB.Models.TmLocation", b =>
                {
                    b.Property<int>("Locationid")
                        .HasColumnType("integer")
                        .HasColumnName("locationid");

                    b.Property<int>("Areaid")
                        .HasColumnType("integer")
                        .HasColumnName("areaid");

                    b.Property<string>("Createby")
                        .HasColumnType("text")
                        .HasColumnName("createby");

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdate")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("Fg")
                        .HasColumnType("boolean")
                        .HasColumnName("fg");

                    b.Property<DateTime?>("Inactivedate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("inactivedate")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("Isactive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<string>("Locationcode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("locationcode");

                    b.Property<string>("Locationname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("locationname");

                    b.Property<bool>("Rm")
                        .HasColumnType("boolean")
                        .HasColumnName("rm");

                    b.Property<string>("Updateby")
                        .HasColumnType("text")
                        .HasColumnName("updateby");

                    b.Property<DateTime?>("Updatedate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedate");

                    b.HasKey("Locationid")
                        .HasName("idx_183395_pk_tm_location_1");

                    b.HasIndex(new[] { "Locationcode" }, "locationcode")
                        .IsUnique();

                    b.ToTable("tm_location", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
